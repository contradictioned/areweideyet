doctype html
html(lang="en")
  head
    title Are we (I)DE yet?
    link(rel="stylesheet" href="style.css")
    script(src="script.js")
    meta(charset="utf-8")
  body
    .container
      header
        h1 Are we (I)DE yet?
        p
          | An overview about the state of 
          a(href="https://www.rust-lang.org/") Rust
          |  support by text editors and their integrated brethren.
        p Below you'll find a table listing the comparable features of editors,
          | followed by specific information about single programs.
          | The last part presents some more tooling of Rust's ecosystem.

      section
        include table.jade

        h1 Text Editors

        ul
          li
            a(name="atom")
            h2 Atom
            p.packages
              | Important packages:
              a(href="https://atom.io/packages/ide-rust") ide-rust 
              | automatically prompts to install the nightly toolchain and then 
              | sets up everything else that's needed for code completion, API 
              | documentation lookup and so on.
              a(href="https://atom.io/packages/build-cargo") build-cargo
              | (relying on 
              a(href="https://github.com/noseglid/atom-build") atom-build
              | )
            p.last-update(title="Last update") 2019-06-29

          li
            a(name="bbedit")
            h2 BBEdit
            p.packages
              | Important packages: 
              a(href="https://github.com/ogham/Rust-BBEdit") Rust-BBEdit
            p.last-update(title="Last update") 2019-07-15

          li
            a(name="brackets")
            h2 Brackets
            p.packages
              | Important packages:
              a(href="https://github.com/rrandom/Brackets-Rust-IDE") Rust-IDE
            p.last-update(title="Last update") 2016-01-12

          li
            a(name="emacs")
            h2 Emacs
            p.packages
              | Important packages: 
              a(href="https://github.com/rust-lang/rust-mode") rust-mode
              | , 
              a(href="https://github.com/flycheck/flycheck-rust") flycheck-rust
              | , 
              a(href="https://github.com/racer-rust/emacs-racer") emacs-racer
              | , 
              a(href="https://github.com/emacs-lsp/lsp-mode") lsp-mode
              | , 
              a(href="https://github.com/freebroccolo/rust-snippets") rust-snippets
              | ,
              a(href="https://github.com/brotzeit/rustic") rustic
            p.last-update(title="Last update") 2019-07-17

          li
            a(name="micro")
            h2 Micro
            p.specific
              a(href="https://micro-editor.github.io/") Micro
              |  is a modern and intuitive terminal-based text editor.
            p.packages
              | Important packages:
              a(href="https://github.com/tommyshem/micro-rust-plugin") micro-rust-plugin
            p.last-update(title="Last update") 2020-08-20

          li
            a(name="mc")
            h2 Midnight Commander
            p.packages
              | Important packages: 
              a(href="https://github.com/chabapok/mc-rust-lang") mc-rust-lang 
            p.last-update(title="Last update") 2017-08-25

          li
            a(name="geany")
            h2 Geany
            p.specific
              | Specific highlights:
              | Geany is one of the few editors with syntax highlighting out-of-the-box (since 1.24).
              | It has built in scripts to run rustc, and even cargo support is coming soon&trade;.
            p.last-update(title="Last update") 2015-08-16

          li
            a(name="gedit")
            h2 Gedit
            p.packages
              | Important packages:
              a(href="https://github.com/chronologicaldot/GEdit-Rust-lang") GEdit-Rust-lang (syntax highlighting)
              | , 
              a(href="https://github.com/rust-lang/gedit-config") gedit-config (also syntax highlighting)
              | , 
              a(href="https://github.com/isamert/gracer") gracer
            p.last-update(title="Last update") 2016-10-09

          li
            a(name="kate")
            h2 Kate
            p.specific
              | Specific highlights:
              | Kate provides Rust and .toml syntax highlighting out of the box.
              | Plus, there is also support for rls and through that autocompletion, 
              | linting, code formatting and go-to definition.
              | Activate it with:
              | Settings > Configure Kate > Plugins > LSP Client.
            p.last-update(title="Last update") 2020-05-08

          li
            a(name="textadept")
            h2 Textadept
            p.packages
              | Important packages:
              a(href="https://bitbucket.org/a_baez/ta-rust/src") ta-rust
              | (unfortunately out of date),
              a(href="https://bitbucket.org/a_baez/ta-toml") ta-toml
            p.specific
              | Specific highlights:
              | Textadept is one of the few editors with syntax highlighting out-of-the-box (since 8.0).
              | The module has built in scripts to run rustc with simple syntax checking and cargo support.
            p.last-update(title="Last update") 2018-08-31

          li
            a(name="sublime")
            h2 Sublime Text 2/3
            p.specific
              | Sublime supports Rust out-of-the-box with syntax highlighting, snippets, build scripts,
              | and its new 
              a(href="https://www.sublimetext.com/blog/articles/sublime-text-3-build-3124") definition system.
            p.packages
              | Important packages: 
              a(href="https://packagecontrol.io/packages/TOML") TOML
              | , 
              a(href="https://packagecontrol.io/packages/Rust%20Enhanced") Rust Enhanced
              | , 
              a(href="https://packagecontrol.io/packages/YcmdCompletion") YouCompleteMe plugin
              | , 
              a(href="https://packagecontrol.io/packages/BeautifyRust") BeautifyRust
            p.last-update(title="Last update") 2018-08-31
            
          li
            a(name="vim")
            h2 Vim and Neovim
            p.packages
              | Important packages:
              ul
                li
                  a(href="https://github.com/rust-lang/rust.vim") rust.vim
                li
                  a(href="https://github.com/neoclide/coc-rls/") coc-rls
                  |  (relying on 
                  a(href="https://github.com/neoclide/coc.nvim") Coc
                  | )
                li
                  a(href="http://blog.jwilm.io/youcompleteme-rust") YouCompleteMe-rust
                li
                  a(href="https://github.com/racer-rust/vim-racer") vim-racer
                li
                  a(href="https://github.com/scrooloose/syntastic") syntastic
                li
                  a(href="https://github.com/honza/vim-snippets") vim-snippets
                  |  (relying on 
                  a(href="https://github.com/sirver/ultisnips") UltiSnips
                  | )
                li
                  a(href="https://github.com/ncm2/ncm2-racer") ncm2-racer
                  |  (relying on 
                  a(href="https://github.com/ncm2/ncm2") ncm2
                  | )
            p.packages
              | Important Neovim-only packages:
              ul
                li
                  a(href="https://github.com/dbgx/lldb.nvim") lldb.nvim
                  |  (
                  a(href="https://github.com/dbgx/lldb.nvim/commit/56dfc2d945") unmaintained
                  |  as of 2018-03-11)
                li
                  a(href="https://github.com/roxma/nvim-cm-racer") nvim-cm-racer
                  |  (relying on 
                  a(href="https://github.com/roxma/nvim-completion-manager") nvim-completion-manager
                  | , which is 
                  a(href="https://github.com/roxma/nvim-completion-manager/issues/12#issuecomment-382334422") unmaintained
                  |  as of 2018-04-18)
            p.last-update(title="Last update") 2019-07-15
          li
            a(name="vscode")
            h2 VS Code
            p.packages
              | Important packages:

              a(href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust") Rust
              | ,
              a(href="https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb") CodeLLDB
              | , 
              a(href="https://marketplace.visualstudio.com/items?itemName=webfreak.debug") Debug
              | , 
              a(href="https://marketplace.visualstudio.com/items?itemName=hdevalke.rust-test-lens") Rust Test Lens
              | , 
              a(href="https://marketplace.visualstudio.com/items?itemName=be5invis.toml") TOML Language Support
              | or 
              a(href="https://marketplace.visualstudio.com/items?itemName=bungcip.better-toml") Better Toml
              | , 
              a(href="https://marketplace.visualstudio.com/items?itemName=serayuzgur.crates") crates
            p.last-update(tilte="Last update") 2019-07-15
            


      section
        h1 Integrated Development Environments

        ul
          li
            a(name="eclipse")
            h2 Eclipse
            p.packages
              a(href="https://github.com/eclipse/corrosion") Corrosion 
              | is a
              a(href="https://www.eclipse.org/downloads/packages/") Rust-specific IDE 
              | built on Eclipse (scroll down to "Eclipse IDE for Rust Developers") and
              a(href="https://marketplace.eclipse.org/content/redox-rust-edition-eclipse-ide") an Eclipse plugin
              |.
            p.specific With Corrosion you get:
            ul.features
              li project wizard
              li build integration with cargo
              li rustup and cargo management tools
              li gdb debugging
              li go to definitions
              li autocomplete using Racer
              li autoformat using rustfmt
              li references and definitions
              li as-you-type diagnostics
              li rename symbol
              li document symbol tree
            p.last-update(title="Last update") 2018-31-07

          li
            a(name="visualstudio")
            h2 Visual Studio (Community)
            p.packages
              | Important packages:
              a(href="https://github.com/PistonDevelopers/VisualRust") Visual Rust
              
            p
              | With Visual Rust you get
            ul.features
              li project support
              li build scripts
              li autocomplete using Racer
              li go to definition (including code from base Rust libraries and other third party libraries)
              li debugger powered by MIEngine
              li conditional breakpoints
              li watch window
              li immediate window (for contextual REPL experience)
              li using both the watch and the immediate window the runtime state can be changed
              li ability to drag and drop to change the next code line that will be executed
              li call stack view and navigation
            p.last-update(title="Last update") 2015-09-25

          li
            a(name="intellij")
            h2 IntelliJ-based IDEs
            p.packages
              | Plugins:
              a(href="https://plugins.jetbrains.com/plugin/8182-rust") intellij-rust
              | and
              a(href="https://plugins.jetbrains.com/plugin/8195-toml") intellij-toml
              |.
            p
              | The plugins bring Rust and TOML support to 
              a(href="https://www.jetbrains.com/idea/") IDEA
              |, 
              a(href="https://www.jetbrains.com/clion/") CLion
              |, 
              a(href="https://www.jetbrains.com/pycharm/") PyCharm
              |, and other JetBrains IDEs.
            p
              | Language support includes syntax highlighting, completion,
              | navigation, and other 
              a(href="https://intellij-rust.github.io/features/") code insight features
              |. You can work with Cargo commands and run Clippy or Rustfmt without leaving the IDE.
            p
              | Debugger is available in CLion and IntelliJ IDEA Ultimate. CLion's integration also supports CPU profiling.
            p.last-update(title="Last update") 2020-07-29
        
        li
          a(name="RustRover")
          h2 Full-blown JetBrains IDE for Rust Developers!
          p.packages
            a(href="https://www.jetbrains.com/rust/") Rust-specific IDE 
            | new feature-rich Rust IDE with timely support, regular updates,
            and an out-of-the-box experience. Enjoy coding with Rust!
          p.Specific With Rust Rover you get:
          ul.features
            li project wizard
            li build integration with cargo
            li rustup and cargo management tools
            li gdb and lldb debugging
            li code profiling
            li code coverage
            li test runners
            li code structure
            li search and navigation
            li fast access to crates documentation(incl. docs.rs)
            li references and definitions
            li full type information (incl. inlay hints)
            li On-the-fly analysis & quick-fixes
            li autocomplete and code generation
            li macro expansion
            li autoformat using rustfmt
            li smart refactorings
            li live templates (snippets)
          p.last-update(title="Last update") 2023-09-13

          li
            a(name="ride")
            h2 RIDE
            p
              a(href="https://github.com/madeso/ride") ride
              |  is another IDE that is exclusively built for Rust.
              |  It is still in a very early state, and the author suggests not to use it productively.
            p
              |  But if you want to take a look behind the curtains, you can do so on 
              a(href="https://www.youtube.com/playlist?list=PLLZf3o2GDQ_hHiXd_xqL_ShzGcU44WMi3") YouTube
              |  where he shows recordings of him programming ride.
            p.last-update(title="Last update") 2016-10-10

          li
            a(name="gnome-builder")
            h2 GNOME Builder
            p
              | With GNOME Builder you get out of the box
            ul.features
              li build integration with cargo
              li semantic syntax highlighter that knows about your types
              li autocomplete
              li go to definition (including code from base Rust libraries and other third party libraries)
              li as-you-type diagnostics
              li rename symbol
              li document symbol tree
              li toolchain management powered by rustup
            p
              | Rustfmt can be used 
              a(href="https://gitlab.gnome.org/GNOME/gnome-builder/blob/master/src/plugins/beautifier/README.md") with help of beautifier.
            p.last-update(title="Last update") 2018-11-30

      section
        h1 Meta

        ul
          li
            a(name="racer")
            h2 Racer
            p
              a(href="https://github.com/phildawes/racer") Racer
              |  is a code completion tool for Rust that is developed standalone.
              |  It is the basis for code completion in pretty much every setup.
            p.last-update(title="Last update") 2015-08-16
          li
            a(name="rustfmt")
            h2 rustfmt
            p
              a(href="https://github.com/rust-lang-nursery/rustfmt") rustfmt
              |  is a code formatting tool which can easily be installed via 
              code cargo install rustfmt
            p.last-update(title="Last update") 2017-02-24
          li
            a(name="rusty-tags")
            h2 rusty-tags
            p
              a(href="https://github.com/dan-t/rusty-tags") rusty-tags
              |  provides tags for 
              a(href="http://ctags.sourceforge.net/") ctags 
              |  which can be used with all editors that support it.
            p.last-update(title="Last update") 2017-02-24
          li
            a(name="tabnine")
            h2 TabNine
            p
              a(href="https://www.tabnine.com/") TabNine
              |  uses deep learning to generate code completion suggestions.
              | Plugins for several editors are available.
            p.last-update(title="Last update") 2020-08-20
      footer
        ul
          li
            p
              | Background:
              br
              a(href="http://subtlepatterns.com/sprinkles/") Sprinkles
          li
            p
              | Inspiration:
              br
              a(href="https://www.arewewebyet.org/") Are we web yet?
          li
            p
              | Licensed under:
              br
              a(href="http://creativecommons.org/licenses/by/4.0/") CC-By
          li
            p
              | You want to contribute?
              br
              a(href="https://github.com/contradictioned/areweideyet") GitHub
        section#legal
          h1 Legal and Privacy
          p This is a private project I started because I like the Rust programming language and its helpful community, and I wanted to give something back. All information on this site is gathered by wonderful contributers on Github and hosted on my own server. The content of pages linked to on this site are not under my control. If you want to contribute please use Github, otherwise reach me via contact at the domain name (without www).
          p This server writes IP addresses into a log file which is used for internal statistics, security, and occasional debugging, and which is deleted at most after a week. Otherwise, your data is not processed in any way.
